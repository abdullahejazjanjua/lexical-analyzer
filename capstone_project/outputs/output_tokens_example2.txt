Line: 0, Kind: Keyword, Value: include
Line: 0, Kind: identifier, Value: iostream
Line: 1, Kind: Keyword, Value: include
Line: 1, Kind: Keyword, Value: string
Line: 2, Kind: identifier, Value: define
Line: 2, Kind: identifier, Value: MAX
Line: 2, Kind: integer, Value: 10
Line: 4, Kind: Keyword, Value: using
Line: 4, Kind: Keyword, Value: namespace
Line: 4, Kind: Keyword, Value: std
Line: 4, Kind: separator, Value: ;
Line: 8, Kind: Keyword, Value: double
Line: 8, Kind: identifier, Value: calculateArea
Line: 8, Kind: separator, Value: (
Line: 8, Kind: Keyword, Value: double
Line: 8, Kind: identifier, Value: length
Line: 8, Kind: separator, Value: ,
Line: 8, Kind: Keyword, Value: double
Line: 8, Kind: identifier, Value: width
Line: 8, Kind: separator, Value: )
Line: 9, Kind: separator, Value: {
Line: 10, Kind: Keyword, Value: return
Line: 10, Kind: identifier, Value: length
Line: 10, Kind: operator, Value:  * 
Line: 10, Kind: identifier, Value: width
Line: 10, Kind: separator, Value: ;
Line: 11, Kind: separator, Value: }
Line: 13, Kind: Keyword, Value: int
Line: 13, Kind: Keyword, Value: main
Line: 13, Kind: separator, Value: (
Line: 13, Kind: separator, Value: )
Line: 14, Kind: separator, Value: {
Line: 15, Kind: Keyword, Value: char
Line: 15, Kind: identifier, Value: grade
Line: 15, Kind: operator, Value:  = 
Line: 15, Kind: char_literal, Value: 'A'
Line: 15, Kind: separator, Value: ;
Line: 16, Kind: Keyword, Value: string
Line: 16, Kind: identifier, Value: message
Line: 16, Kind: operator, Value:  = 
Line: 16, Kind: string, Value: "Hello World"
Line: 16, Kind: separator, Value: ;
Line: 17, Kind: Keyword, Value: int
Line: 17, Kind: identifier, Value: numbers
Line: 17, Kind: separator, Value: [
Line: 17, Kind: integer, Value: 5
Line: 17, Kind: separator, Value: ]
Line: 17, Kind: operator, Value:  = 
Line: 17, Kind: separator, Value: {
Line: 17, Kind: integer, Value: 1
Line: 17, Kind: separator, Value: ,
Line: 17, Kind: integer, Value: 2
Line: 17, Kind: separator, Value: ,
Line: 17, Kind: integer, Value: 3
Line: 17, Kind: separator, Value: ,
Line: 17, Kind: integer, Value: 4
Line: 17, Kind: separator, Value: ,
Line: 17, Kind: integer, Value: 5
Line: 17, Kind: separator, Value: }
Line: 17, Kind: separator, Value: ;
Line: 19, Kind: Keyword, Value: for
Line: 19, Kind: separator, Value: (
Line: 19, Kind: Keyword, Value: int
Line: 19, Kind: identifier, Value: i
Line: 19, Kind: operator, Value:  = 
Line: 19, Kind: integer, Value: 0
Line: 19, Kind: separator, Value: ;
Line: 19, Kind: identifier, Value: i
Line: 19, Kind: operator, Value:  < 
Line: 19, Kind: integer, Value: 5
Line: 19, Kind: separator, Value: ;
Line: 19, Kind: identifier, Value: i
Line: 19, Kind: separator, Value: )
Line: 20, Kind: separator, Value: {
Line: 21, Kind: Keyword, Value: if
Line: 21, Kind: separator, Value: (
Line: 21, Kind: identifier, Value: numbers
Line: 21, Kind: separator, Value: [
Line: 21, Kind: identifier, Value: i
Line: 21, Kind: separator, Value: ]
Line: 21, Kind: operator, Value:  <= 
Line: 21, Kind: integer, Value: 3
Line: 21, Kind: separator, Value: )
Line: 22, Kind: separator, Value: {
Line: 24, Kind: Keyword, Value: continue
Line: 24, Kind: separator, Value: ;
Line: 25, Kind: separator, Value: }
Line: 26, Kind: Keyword, Value: cout
Line: 26, Kind: operator, Value:  << 
Line: 26, Kind: identifier, Value: numbers
Line: 26, Kind: separator, Value: [
Line: 26, Kind: identifier, Value: i
Line: 26, Kind: separator, Value: ]
Line: 26, Kind: operator, Value:  << 
Line: 26, Kind: identifier, Value: endl
Line: 26, Kind: separator, Value: ;
Line: 27, Kind: separator, Value: }
Line: 29, Kind: Keyword, Value: return
Line: 29, Kind: integer, Value: 0
Line: 29, Kind: separator, Value: ;
Line: 30, Kind: separator, Value: }
