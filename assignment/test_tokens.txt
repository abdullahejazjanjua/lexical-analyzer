Line 1: #include <iostream> 	 ---> Header
Line 2: #include <string> 	 ---> Header
Line 3: using 	 ---> Keyword
Line 3: namespace 	 ---> Keyword
Line 3: std 	 ---> Identifier
Line 3: ; 	 ---> Separator
Line 5: class 	 ---> Keyword
Line 5: Animal 	 ---> Identifier
Line 5: { 	 ---> Separator
Line 6: public 	 ---> Keyword
Line 7: virtual 	 ---> Keyword
Line 7: void 	 ---> Type
Line 7: speak 	 ---> Identifier
Line 7: ( 	 ---> Separator
Line 7: ) 	 ---> Separator
Line 7: = 	 ---> Operator
Line 7: 0 	 ---> Integer
Line 7: ; 	 ---> Separator
Line 8: } 	 ---> Separator
Line 8: ; 	 ---> Separator
Line 10: class 	 ---> Keyword
Line 10: Dog 	 ---> Identifier
Line 10: public 	 ---> Keyword
Line 10: Animal 	 ---> Identifier
Line 10: { 	 ---> Separator
Line 11: private 	 ---> Keyword
Line 12: string 	 ---> Type
Line 12: name 	 ---> Identifier
Line 12: ; 	 ---> Separator
Line 13: public 	 ---> Keyword
Line 14: Dog 	 ---> Identifier
Line 14: ( 	 ---> Separator
Line 14: string 	 ---> Type
Line 14: n 	 ---> Identifier
Line 14: ) 	 ---> Separator
Line 14: name 	 ---> Identifier
Line 14: ( 	 ---> Separator
Line 14: n 	 ---> Identifier
Line 14: ) 	 ---> Separator
Line 14: { 	 ---> Separator
Line 14: } 	 ---> Separator
Line 15: void 	 ---> Type
Line 15: speak 	 ---> Identifier
Line 15: ( 	 ---> Separator
Line 15: ) 	 ---> Separator
Line 15: override 	 ---> Identifier
Line 15: { 	 ---> Separator
Line 16: cout 	 ---> Keyword
Line 16: << 	 ---> Operator
Line 16: name 	 ---> Identifier
Line 16: << 	 ---> Operator
Line 16: " says Woof!" 	 ---> String Literal
Line 16: << 	 ---> Operator
Line 16: endl 	 ---> Identifier
Line 16: ; 	 ---> Separator
Line 17: } 	 ---> Separator
Line 18: } 	 ---> Separator
Line 18: ; 	 ---> Separator
Line 20: template 	 ---> Keyword
Line 20: < 	 ---> Operator
Line 20: typename 	 ---> Identifier
Line 20: T 	 ---> Identifier
Line 20: > 	 ---> Operator
Line 21: T 	 ---> Identifier
Line 21: add 	 ---> Identifier
Line 21: ( 	 ---> Separator
Line 21: T 	 ---> Identifier
Line 21: a 	 ---> Identifier
Line 21: , 	 ---> Separator
Line 21: T 	 ---> Identifier
Line 21: b 	 ---> Identifier
Line 21: ) 	 ---> Separator
Line 21: { 	 ---> Separator
Line 22: return 	 ---> Keyword
Line 22: a 	 ---> Identifier
Line 22: + 	 ---> Operator
Line 22: b 	 ---> Identifier
Line 22: ; 	 ---> Separator
Line 23: } 	 ---> Separator
Line 25: enum 	 ---> Keyword
Line 25: Color 	 ---> Identifier
Line 25: { 	 ---> Separator
Line 25: RED 	 ---> Identifier
Line 25: , 	 ---> Separator
Line 25: GREEN 	 ---> Identifier
Line 25: , 	 ---> Separator
Line 25: BLUE 	 ---> Identifier
Line 25: } 	 ---> Separator
Line 25: ; 	 ---> Separator
Line 27: int 	 ---> Type
Line 27: main 	 ---> Keyword
Line 27: ( 	 ---> Separator
Line 27: ) 	 ---> Separator
Line 27: { 	 ---> Separator
Line 28: int 	 ---> Type
Line 28: x 	 ---> Identifier
Line 28: = 	 ---> Operator
Line 28: 10 	 ---> Integer
Line 28: , 	 ---> Separator
Line 28: y 	 ---> Identifier
Line 28: = 	 ---> Operator
Line 28: 20 	 ---> Integer
Line 28: ; 	 ---> Separator
Line 29: double 	 ---> Type
Line 29: pi 	 ---> Identifier
Line 29: = 	 ---> Operator
Line 29: 3.1415 	 ---> Float
Line 29: ; 	 ---> Separator
Line 30: char 	 ---> Type
Line 30: symbol 	 ---> Identifier
Line 30: = 	 ---> Operator
Line 30: '#' 	 ---> Char Literal
Line 30: ; 	 ---> Separator
Line 31: bool 	 ---> Type
Line 31: isActive 	 ---> Identifier
Line 31: = 	 ---> Operator
Line 31: false 	 ---> Keyword
Line 31: ; 	 ---> Separator
Line 32: string 	 ---> Type
Line 32: text 	 ---> Identifier
Line 32: = 	 ---> Operator
Line 32: "Hello" 	 ---> String Literal
Line 32: ; 	 ---> Separator
Line 34: x 	 ---> Identifier
Line 34: += 	 ---> Compound Operator
Line 34: y 	 ---> Identifier
Line 34: ; 	 ---> Separator
Line 35: y 	 ---> Identifier
Line 35: -- 	 ---> Compound Operator
Line 35: ; 	 ---> Separator
Line 36: pi 	 ---> Identifier
Line 36: *= 	 ---> Compound Operator
Line 36: 2.0 	 ---> Float
Line 36: ; 	 ---> Separator
Line 37: isActive 	 ---> Identifier
Line 37: = 	 ---> Operator
Line 37: ( 	 ---> Separator
Line 37: x 	 ---> Identifier
Line 37: != 	 ---> Operator
Line 37: y 	 ---> Identifier
Line 37: ) 	 ---> Separator
Line 37: || 	 ---> Compound Operator
Line 37: ( 	 ---> Separator
Line 37: pi 	 ---> Identifier
Line 37: > 	 ---> Operator
Line 37: 5.0 	 ---> Float
Line 37: ) 	 ---> Separator
Line 37: ; 	 ---> Separator
Line 39: Dog 	 ---> Identifier
Line 39: d 	 ---> Identifier
Line 39: ( 	 ---> Separator
Line 39: "Bruno" 	 ---> String Literal
Line 39: ) 	 ---> Separator
Line 39: ; 	 ---> Separator
Line 40: Animal 	 ---> Identifier
Line 40: * 	 ---> Operator
Line 40: a 	 ---> Identifier
Line 40: = 	 ---> Operator
Line 40: & 	 ---> Operator
Line 40: d 	 ---> Identifier
Line 40: ; 	 ---> Separator
Line 41: a 	 ---> Identifier
Line 41: - 	 ---> Operator
Line 41: > 	 ---> Operator
Line 41: speak 	 ---> Identifier
Line 41: ( 	 ---> Separator
Line 41: ) 	 ---> Separator
Line 41: ; 	 ---> Separator
Line 43: Color 	 ---> Identifier
Line 43: c 	 ---> Identifier
Line 43: = 	 ---> Operator
Line 43: RED 	 ---> Identifier
Line 43: ; 	 ---> Separator
Line 44: switch 	 ---> Keyword
Line 44: ( 	 ---> Separator
Line 44: c 	 ---> Identifier
Line 44: ) 	 ---> Separator
Line 44: { 	 ---> Separator
Line 45: case 	 ---> Keyword
Line 45: RED 	 ---> Identifier
Line 46: cout 	 ---> Keyword
Line 46: << 	 ---> Operator
Line 46: "Color is Red" 	 ---> String Literal
Line 46: << 	 ---> Operator
Line 46: endl 	 ---> Identifier
Line 46: ; 	 ---> Separator
Line 47: break 	 ---> Keyword
Line 47: ; 	 ---> Separator
Line 48: case 	 ---> Keyword
Line 48: GREEN 	 ---> Identifier
Line 49: cout 	 ---> Keyword
Line 49: << 	 ---> Operator
Line 49: "Color is Green" 	 ---> String Literal
Line 49: << 	 ---> Operator
Line 49: endl 	 ---> Identifier
Line 49: ; 	 ---> Separator
Line 50: break 	 ---> Keyword
Line 50: ; 	 ---> Separator
Line 51: case 	 ---> Keyword
Line 51: BLUE 	 ---> Identifier
Line 52: cout 	 ---> Keyword
Line 52: << 	 ---> Operator
Line 52: "Color is Blue" 	 ---> String Literal
Line 52: << 	 ---> Operator
Line 52: endl 	 ---> Identifier
Line 52: ; 	 ---> Separator
Line 53: break 	 ---> Keyword
Line 53: ; 	 ---> Separator
Line 54: default 	 ---> Keyword
Line 55: cout 	 ---> Keyword
Line 55: << 	 ---> Operator
Line 55: "Unknown Color" 	 ---> String Literal
Line 55: << 	 ---> Operator
Line 55: endl 	 ---> Identifier
Line 55: ; 	 ---> Separator
Line 56: break 	 ---> Keyword
Line 56: ; 	 ---> Separator
Line 57: } 	 ---> Separator
Line 59: try 	 ---> Keyword
Line 59: { 	 ---> Separator
Line 60: if 	 ---> Keyword
Line 60: ( 	 ---> Separator
Line 60: x 	 ---> Identifier
Line 60: > 	 ---> Operator
Line 60: 100 	 ---> Integer
Line 60: ) 	 ---> Separator
Line 61: throw 	 ---> Keyword
Line 61: runtime_error 	 ---> Identifier
Line 61: ( 	 ---> Separator
Line 61: "Too big!" 	 ---> String Literal
Line 61: ) 	 ---> Separator
Line 61: ; 	 ---> Separator
Line 62: } 	 ---> Separator
Line 62: catch 	 ---> Keyword
Line 62: ( 	 ---> Separator
Line 62: exception 	 ---> Identifier
Line 62: & 	 ---> Operator
Line 62: e 	 ---> Identifier
Line 62: ) 	 ---> Separator
Line 62: { 	 ---> Separator
Line 63: cout 	 ---> Keyword
Line 63: << 	 ---> Operator
Line 63: "Caught exception: " 	 ---> String Literal
Line 63: << 	 ---> Operator
Line 63: e 	 ---> Identifier
Line 63: what 	 ---> Identifier
Line 63: ( 	 ---> Separator
Line 63: ) 	 ---> Separator
Line 63: << 	 ---> Operator
Line 63: endl 	 ---> Identifier
Line 63: ; 	 ---> Separator
Line 64: } 	 ---> Separator
Line 66: for 	 ---> Keyword
Line 66: ( 	 ---> Separator
Line 66: int 	 ---> Type
Line 66: i 	 ---> Identifier
Line 66: = 	 ---> Operator
Line 66: 0 	 ---> Integer
Line 66: ; 	 ---> Separator
Line 66: i 	 ---> Identifier
Line 66: < 	 ---> Operator
Line 66: 5 	 ---> Integer
Line 66: ; 	 ---> Separator
Line 66: ++ 	 ---> Compound Operator
Line 66: i 	 ---> Identifier
Line 66: ) 	 ---> Separator
Line 66: { 	 ---> Separator
Line 67: cout 	 ---> Keyword
Line 67: << 	 ---> Operator
Line 67: "i: " 	 ---> String Literal
Line 67: << 	 ---> Operator
Line 67: i 	 ---> Identifier
Line 67: << 	 ---> Operator
Line 67: endl 	 ---> Identifier
Line 67: ; 	 ---> Separator
Line 68: } 	 ---> Separator
Line 70: int 	 ---> Type
Line 70: result 	 ---> Identifier
Line 70: = 	 ---> Operator
Line 70: add 	 ---> Identifier
Line 70: < 	 ---> Operator
Line 70: int 	 ---> Type
Line 70: > 	 ---> Operator
Line 70: ( 	 ---> Separator
Line 70: 5 	 ---> Integer
Line 70: , 	 ---> Separator
Line 70: 3 	 ---> Integer
Line 70: ) 	 ---> Separator
Line 70: ; 	 ---> Separator
Line 71: cout 	 ---> Keyword
Line 71: << 	 ---> Operator
Line 71: "Result: " 	 ---> String Literal
Line 71: << 	 ---> Operator
Line 71: result 	 ---> Identifier
Line 71: << 	 ---> Operator
Line 71: endl 	 ---> Identifier
Line 71: ; 	 ---> Separator
Line 73: return 	 ---> Keyword
Line 73: 0 	 ---> Integer
Line 73: ; 	 ---> Separator
Line 74: } 	 ---> Separator
